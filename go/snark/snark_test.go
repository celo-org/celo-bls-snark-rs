package snark

import (
	"encoding/hex"
	"log"
	"testing"
)

func split(buf []byte, lim int) [][]byte {
	var chunk []byte
	chunks := make([][]byte, 0, len(buf)/lim+1)
	for len(buf) >= lim {
		chunk, buf = buf[:lim], buf[lim:]
		chunks = append(chunks, chunk)
	}
	if len(buf) > 0 {
		chunks = append(chunks, buf[:len(buf)])
	}
	return chunks
}

func TestVerify(t *testing.T) {
	proof := "c651f04bffd8103cc1f285150aff20dc1b91041824e45e2e2f3b186911a2fc55237c6d9fcd62507a511f01ad58ad5032c9d4886587c79744ebf2ff03e0fbe6bba462cccaf6001fa2f8fe0b0ace82f1dbbb8d7f0a5ca7094048ad12a943c9ddbe13a347a433bdb5ffd59a10708159965e22cdb19b1feebf87225ac34bc796166c18ca7c58e8fc1457ecf892f875159946dea2856d122faacfc275d0e1b9b7932bcce19ce18ec182dedf97ab519e95fc9889f970cc14c9ae6a3000ba5578145eb9c0ca7810b978ccbbf459570d93f38eb4d58f643abded4f7f013a84ce613bb9eba537e97a014f053dc682e8b59ff0d48d875bfe2a8a6e155b9e3d96f1e10d11f1b436dd6fbee24508aa57c75aa4f115295484c17978af9e397ebac1c1f55d0d806ee564ad50192f74f568ba87048f8882cae84b1bcc923e1abf16542414ba4a4927258826dbf51a4533a72372513fc528acde7a994a7a6f402d094afd447b08a4e5cd0005e4d11ece76dfaa1e2ab32b4d126645ad3dfbba8432ad06048c9d3dcfe6587c698b828894ad177d9d8c9fe4fb680e146d9236fc25ba09c6725857c871e1dfb98b55acb5ac64344c021be8fe4dbafb332e8d5858ce771316d83f2f84d081c91320e1d8ced67211c0b8357d44f0216826c55bfae96ca6ac4ecb368051a469152b7663c7216be09b"
	vk := "fb5b5693ffdbee8210d81ad06f0187f6f336ce5e6029cce02263dec5370711cc88e595b7dc8a83c30bbb3ce485196926a7a4e8beeef6976eed6523d3d1fa54aa945707adb8553895e5ee6acbf2607bf73350af0c63a492c0fe79fcbac3611e4ad4157ae490501b6ad38a34fa74ce1642fe99491a489b93cbe530364d9e94349369c4bc7fd13ae863553665841a2844966b3b1e5bb1c31ed9586ce1b492fd4c07da0860011e64d00b37958bcaffdac5f666106f2dc72d51af417e1cfb1b2e7303eff99a1286d859029d3ef669159b38033d20d00a2f53791480ec7fff04a7c13ae116e8ec8d4d050a221112d1692ed638ff41598c23a25231d7aab1ea84f0f4b6648cc0bc41760c826c6d8106a4cc9fac15ce0bb1defd3dc560402d326ad45f5857c71bb6f3229b4cadfa9628d0b453ed590aa5940469f95b287b63413b97ce06bebb7c22c2a01702133a866487e6d9e27439d932acbb3821cb72dbf77cf26529239f4974b0c9622957cabbbbbfc452b211eea0a0c3d86de88c2bd3cbc184e05b41a15418fd4caa0a54c4a3519ef3c600d66db651ef0904d0c87224e7c18522bf04f21d47cf31009b19864b69728d40916c91adb589afe8311e1a198c44a657327c9d82f7be50128f9f2d3aade77749332eca786e516ffe08e4079c7ac0e0ae04ac993c9c55d9b32c590f859febf83ba895322b3d77dbfbb4f8a24574eef16814c950d5155ecc4de228b50689d79780a68face9c390cf80b849e124a85f464e64fa40c08c218582d8b1161cdb6c9772cddf30d8bf2e3e5b0f17230c6658059f7e9d6c08afe72c81e59176432c9efa9cc1d84fc7befe099660c78df7c18a21a0cd0bda6b10a4766e8f8c518acff8eb59bdb4d8dbc7f4563b8df3423525d826caedabd39385a0320efa7404b806c4147f1556e4715145137fe6f4dea9f87debb020f573a4a48c687d2293810bdaf69ece9f21aa0243387c2f6428478d6c615e3585ab37269d6dc01444fdced49cc5f0ebcb9047b671ea3176974c7665dba74560e83a8bacfca8cc9ca2e7b9fec2739787676ad9dcc79b5b1b866abe5fda7013e93b74b708f251ac054220ba93b5b129b1283f57e92dc7405560ccfd1fb1e4272035e8cbb90043c9d35c78b81d6f4f84f7ea00ec93c2af3de499998a88ff4b04ffba3227399d24dfe086b0b0b60d9fc3aa8ebcbe3fd83ee41278ef63b15ace278dabeea90dfbf7313647a1bd1cd29a7b09ae3b182b76752649ed3da26d717e5dc7f6f9b7befc933ad93cc5aae3f0a233208c38e0ed67c9288600b222c6f4b61c9195b24edac3a25dd9b1af90e4da4f5827780273895cf229381d8339f9848e87e2be7c33c7b620932094b82fbfe4b1fce6a3b458c43703000000000000006892526f0046c90070b38984ab691ed1b65465824cbc89bbb409bb045a58bcf83d84a056e2368ca054e8f02afc1d9afcea7a9a183af5dc33fdf4fb93b4c09731334f7f18b4f7a4b5977543f851623d3285c1f41f6555ead530b9e13aff231128acb5780647b3286b673f92210b8a0f80591a0462999341f7cdf73d3477223214b6c2f4448335f71617313c759eb4e15548d929c8cbea6cf00733151b378d4dab6b26ca745cdc6ce7e5f686bf6d653e8748252f490723afa03ed1dc9095b15ff247bc3512a7c5c96058635b7319beae1f465106efc031e6d216a2d735134f6def4d79743c9e9a96b8ff9b5a3c0e29fa8f36964851bbf74de41d7681f82af6f4bec516b1275f1280288e515623cabcab8962cfd4eb3b97a835f26a47ed2349ae71a14d1201e183"

	first_epoch_pubkeys := "9cd44cb167fce797a8377c337e80048897410be19fcf83a78609e2a1f889e894d965e084400a1ad5c95cb8c1856aa90003bd1967e27d446d7d9862ba58c6d6f9aa1821503541585e7900c7c7803d404ff55b616f31cec723927251466d011401a6dab2f85424bd6e6690c98df63f4fba152745349d25b14bc23e6e1fc033bdc10b7d390d255ca5655ad715d2ff42f200d25caa1c9c4f09dcbcad3b58b9c1d16c1faaf3257517e75703d59cc02b755d04944c0bb0084b7bb8c8f15395bc6bfb803b3f10a552ccd0481a25c139eedf8437ec8e40dc14ee16d2fa576621566453d76ca8a291d2aa8f0da8250ba4a2e80d015a12a7604c64ceb9091a540f9447d3e34bab0b226936966ef3a8b9d83b6856007ed31a8933cf5306c280b403bf5241811c901920cf3951d2b88e61fe9f2b14e2d06ca8bc8ac6a6bb4a7b6d4c5050d0c7ed4481ad18369fa031741a446fd14801d904c3066588269981a7d966407b624bdfc5a2ddc46c54368065cf693540881bb524ea5fc62b0487d647c1f4604c5980"

	last_epoch_pubkeys := "0cfd2dcde3026d001914a5537f27088fd13fb0fc7a4acf0b7b1c4547ca59fad105222997bfca03508b017fdc31ae6e01c491bdbf454756c99968c4afaf8c166923a4acc278f07d65d94e9c7293b12b0e17ff8f175f64df4b16a183dc0e7ab48030eef15a8eaa0cb798a317460285bb196ab0eaa07173ad4ee575e6e6a6f020f66100a4e4b96d854fa8651b16952a5900bacea63993486123aa08ff6639278c2d1006e640be6e83d99181d44cf134e5db58b1257640cd3647e8347e8ca20598019aedda7287bdb10189e68840b95dfb2ac074023df9d6aba37dbe0d45122f29354791ac5add8811bd8f9bc9d8d7838301bc9ea176e478ad90077980aa9e33f9437a0db8b27094798185a20b8b3b814fec6cfb00f0354cadfb9db97c1e4c9dc580197d7874345877cda5bf194c8d443aeb486e9f0736e3d000658f07c8b868125a76293a9d30269d64753f52aea94f38000fccae36c3976a0eb8be85e275201604ba48386410efecb820898e8241a4ad2e2098662deb0c64fda0cb8a0de7eee700"

	pk1, _ := hex.DecodeString(first_epoch_pubkeys)
	epoch1 := EpochBlock{
		Index:         0,
		MaxNonSigners: 2,
		PublicKeys:    split(pk1, PUBLIC_KEY_BYTES),
	}

	pk2, _ := hex.DecodeString(last_epoch_pubkeys)
	epoch2 := EpochBlock{
		Index:         2,
		MaxNonSigners: 2,
		PublicKeys:    split(pk2, PUBLIC_KEY_BYTES),
	}

	proofDec, _ := hex.DecodeString(proof)
	vkDec, _ := hex.DecodeString(vk)

	err := VerifyEpochs(
		vkDec,
		proofDec,
		epoch1,
		epoch2,
	)

	if err != nil {
		log.Fatal(err)
	}
}
