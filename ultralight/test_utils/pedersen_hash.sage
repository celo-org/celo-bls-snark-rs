A = -1
D = 79743

F = GF(258664426012969094010652733694893533536393512754914660539884262666720468348340822774968888139573360124440321458177)

def add(a, d, x1, y1, x2, y2):
      x3 = (x1*y2+y1*x2)/(1+d*x1*x2*y1*y2)
      y3 = (y1*y2-a*x1*x2)/(1-d*x1*x2*y1*y2)
      return x3, y3
def double(a, d, x1, y1):
    return add(a, d, x1, y1, x1, y1)

gx = F(174701772324485506941690903512423551998294352968833659960042362742684869862495746426366187462669992073196420267127)
gy = F(208487200052258845495340374451540775445408439654930191324011635560142523886549663106522691296420655144190624954833)

def scalar_mult(a, d, s, x1, y1):
    bits = Integer(s).digits(2)[::-1]
    x, y = F(0), F(1)
    for b in bits:
        x, y = double(a, d, x, y)
        if b == 1:
            x, y = add(a, d, x, y, x1, y1)
    return x, y

p1x = 0x00c71c23d093068b5791471f2e46cbe7180bcc348062529f081360c35ce645cabbbf9ad4b3a2bffd972e91c862cafc9f
p1y = 0x00a9cbd1a7197b7dfc0028331dbc7b379d9e08d5bd22c178037100f58988eef22e4892c9811156292bff061a470b8455

p2x = 0x0064a625712ead0db78c05fc97043d537f75b6a574cd6238f6ba0bbe9f640ffebf9a482a7723b797b42b60b4a96aaa60
p2y = 0x006498f404c5584d4eeb1b6e31392135bc68d42dd655e6b59850618a64d174561be70a1e1032d785f2bf4b89f2d3cbce

# hash of 0b11111mb
x,y = scalar_mult(A, D, 15, p1x, p1y)
x,y = add(A, D, x, y, p2x, p2y)
x,y
print('%x' % int(x))
